<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mysite.restaurant.kdh.Mappers.ReservationMapper">

    <!-- 예약 추가 -->
 	<insert id="insertReservation" parameterType="com.mysite.restaurant.kdh.Entity.ReservationEntity" useGeneratedKeys="true" keyProperty="reservationId">
    INSERT INTO reservation 
    (user_id, restaurant_id, reservation_time, request, number_of_people, created_at, updated_at)
    VALUES 
    (#{userId}, #{restaurantId}, #{reservationTime}, #{request}, #{numberOfPeople}, NOW(), NOW());
	</insert>


    <!-- 내 예약 목록 조회 (사용자 ID로 조회) -->
    <select id="selectReservationsByEmail" resultType="com.mysite.restaurant.kdh.Entity.ReservationEntity">
        SELECT r.*,u.*
            res.name AS restaurant_name,  <!-- 레스토랑 이름 -->
        FROM 
            reservation r
        JOIN 
            users u ON r.user_id = u.user_id
        JOIN 
            restaurants res ON r.restaurant_id = res.restaurant_id
        WHERE 
            u.user_id = #{userId}
        ORDER BY 
    		r.reservation_time DESC 
    </select>

    <!-- 예약 수정 -->
    <update id="updateReservation" parameterType="com.mysite.restaurant.kdh.Entity.ReservationEntity">
        UPDATE reservation
        SET 
            reservation_time = #{reservationTime}, 
            request = #{request}, 
            number_of_people = #{numberOfPeople}
        WHERE 
            reservation_id = #{reservationId};
    </update>

       <!-- 예약 조회 (업주) -->
	<select id="selectReservationsByRestaurant" resultMap="reservationResultMap" parameterType="Long">
    SELECT  r.*,u.*
    	FROM reservation r
    	JOIN users u ON r.user_id = u.user_id
        JOIN 
        restaurants res ON r.restaurant_id = res.restaurant_id    	
    	WHERE r.restaurant_id = #{restaurantId}
	</select>


    <resultMap id="reservationResultMap" type="com.mysite.restaurant.kdh.Entity.ReservationEntity">
    <result property="reservationId" column="reservation_id" />
    <result property="userId" column="user_id" />
    <result property="restaurantId" column="restaurant_id" />
    <result property="reservationTime" column="reservation_time" jdbcType="TIMESTAMP"/>
    <result property="request" column="request" />
    <result property="status" column="status" />
    <result property="numberOfPeople" column="number_of_people" />
    <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
    <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
    <result property="restaurantName" column="name"/>   
    
    <!-- UserEntity 매핑 -->
    <association property="user" javaType="com.mysite.restaurant.kdh.Entity.UsersEntity">
        <result property="userId" column="user_id" />
        <result property="email" column="email" />
        <result property="phone" column="phone" />
    </association>
</resultMap>
    <!-- 예약 취소 (업주) -->
	<delete id="deleteReservation" parameterType="Long">
   		DELETE FROM reservation
    	WHERE reservation_id = #{reservationId}
	</delete>
    <!-- 영업스케줄 조회 -->
    <select id="selectSchedule" resultType="com.mysite.restaurant.kdh.Entity.ScheduleEntity" parameterType="Long">
	    SELECT open_date, start_time,end_time, is_open, break_start, break_end, schedule_id
	    from schedule where restaurant_id = #{restaurantId};
	</select>
    <!-- 영업스케줄 입력 -->
    <insert id="insertSchedule" parameterType="com.mysite.restaurant.kdh.Entity.ScheduleEntity">
        INSERT INTO schedule
        (restaurant_id, open_date, start_time, end_time, is_open, break_start, break_end, created_at, updated_at)
        VALUES 
        (#{restaurantId},#{openDate}, #{startTime}, #{endTime}, #{isOpen}, #{breakStart}, #{breakEnd}, NOW(), NOW());
    </insert>
    
    <!-- 영업시간 삭제 -->
	<delete id="deleteSchedule" parameterType="Long">
   		DELETE FROM schedule
    	WHERE schedule_id = #{scheduleId}
	</delete>
    
    <!--예약수정(업주) -->
    <update id="updateReservationManager" parameterType="com.mysite.restaurant.kdh.Entity.ReservationEntity">
        UPDATE reservation
        SET 
            status = #{status} 
        WHERE 
            reservation_id = #{reservationId};
    </update>
    
    <!-- 예약조회 업주 -->
    <select id="selectReservation" resultMap="reservationResultMap" parameterType="Long">
	    SELECT  
    	    u.email, 
        	u.phone, 
        	r.reservation_id,
        	r.user_id,
        	r.restaurant_id,
        	res.name,
        	r.reservation_time,
        	r.request,
        	r.status,
        	r.number_of_people,
        	r.created_at,        
        	r.updated_at 
    		FROM reservation r
    		JOIN users u ON r.user_id = u.user_id
        	JOIN 
        	restaurants res ON r.restaurant_id = res.restaurant_id    	
    	WHERE r.reservation_id = #{reservationId};
	</select>

    <select id="selectRestaurantByName" resultType="com.mysite.restaurant.jh.RestaurantDTO">
        SELECT
        restaurant_id,
        phone,
        NAME,
        road_addr,
        jibun_addr,
        detail_addr
        FROM
        restaurants
        WHERE
        NAME LIKE CONCAT('%', #{name}, '%')
    </select>
</mapper>
