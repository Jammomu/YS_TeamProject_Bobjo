<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mysite.restaurant.js.mapper.ReviewMapper">

    <!-- 리뷰 등록 -->
    <insert id="insertReview" parameterType="com.mysite.restaurant.js.model.Reviews">
        INSERT INTO reviews (
            restaurant_id, user_id, reservation_id, taste_rating, service_rating,
            atmosphere_rating, value_rating, review_content, is_verified_visit, helpful_count
        )
        VALUES (
            #{restaurantId}, #{userId}, #{reservationId}, #{tasteRating}, #{serviceRating},
            #{atmosphereRating}, #{valueRating}, #{reviewContent}, #{isVerifiedVisit}, #{helpfulCount}
        );
    </insert>

    <!-- 리뷰 이미지 등록 -->
    <insert id="insertReviewImg" parameterType="com.mysite.restaurant.js.model.ReviewImg">
        INSERT INTO review_images (
            review_id, image_url, image_order
        )
        VALUES (
            #{reviewId}, #{imageUrl}, #{imageOrder}
        );
    </insert>

    <!-- 답글 등록 -->
    <insert id="insertReplie" parameterType="com.mysite.restaurant.js.model.Replies">
        INSERT INTO review_replies (
            review_id, user_id, replies_content
        )
        VALUES (
            #{reviewId}, #{userId}, #{repliesContent}
        );
    </insert>

    <!-- 리뷰 신고 등록 -->
    <insert id="insertReport" parameterType="com.mysite.restaurant.js.model.Reports">
        INSERT INTO review_reports (
            review_id, user_id, reason, report_description, status
        )
        VALUES (
            #{reviewId}, #{userId}, #{reason}, #{reportDescription}, #{status}
        );
    </insert>

    <!-- 도움 됐어요 등록 -->
    <insert id="insertHelpful" parameterType="com.mysite.restaurant.js.model.Helpful">
        INSERT INTO helpful_votes (
            review_id, user_id, state
        )
        VALUES (
            #{reviewId}, #{userId}, #{state}
        );
    </insert>

	<!-- 리뷰 목록 조회 -->
    <select id="selectRestaurantReviews" resultType="com.mysite.restaurant.js.model.Reviews">
        SELECT * FROM reviews WHERE restaurant_id = #{restaurantId}
    </select>

    <!-- 내 리뷰 조회 -->
    <select id="selectMyReviews" parameterType="Long" resultType="com.mysite.restaurant.js.model.Reviews">
        SELECT rev.*, ri.*, r.*
        FROM reviews rev
        JOIN restaurants r ON rev.restaurant_id = r.restaurant_id
        LEFT JOIN review_images ri ON rev.review_id = ri.review_id
        WHERE user_id = #{userId};
    </select>
    
    <!-- 답글 조회 조회 -->
    <select id="selectReplies" resultType="com.mysite.restaurant.js.model.Replies">
        SELECT * FROM review_replies WHERE reply_id = #{replyId};
    </select>
    
    <!-- 신고 목록 조회 -->
    <select id="selectReports" resultType="com.mysite.restaurant.js.model.Reports">
        SELECT * FROM review_reports WHERE report_id = #{reportId};
    </select>

    <!-- 신고 상세 조회 -->
    <select id="selectReport" parameterType="Long" resultType="com.mysite.restaurant.js.model.Reports">
        SELECT
            rev.review_id,
            u.name,
            rev.review_content,
            rev.created_at,
            r.name,
            rrt.report_id,
            rrt.reason,
            rrt.report_description,
            rrt.status
        FROM review_reports rrt
        JOIN reviews rev ON rev.review_id = rrt.review_id
        JOIN users u ON u.user_id = rev.user_id
        JOIN restaurants r ON r.restaurant_id = rev.restaurant_id;
    </select>

    <!-- 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="Long">
        DELETE FROM reviews WHERE review_id = #{reviewId};
    </delete>
    
    <!-- 답글 삭제 -->
    <delete id="deleteReply" parameterType="Long">
        DELETE FROM review_replies WHERE reply_id = #{replyId};
    </delete>

    <!-- 리뷰 신고 삭제 -->
    <delete id="deleteReport" parameterType="Long">
        DELETE FROM review_reports WHERE report_id = #{reportId};
    </delete>
    
    <!-- 리뷰 이미지 삭제 -->
    <delete id="deleteReviewImg" parameterType="Long">
        DELETE FROM review_images WHERE review_image_id = #{reviewImgId};
    </delete>
    
    <!-- 도움 삭제 -->
    <delete id="deleteHelpful" parameterType="Long">
        DELETE FROM helpful_votes WHERE vote_id = #{voteId};
    </delete>

    <!-- 리뷰 수정 -->
    <update id="updateReview" parameterType="com.mysite.restaurant.js.model.Reviews">
        UPDATE reviews
        SET review_content = #{reviewContent}
        WHERE review_id = #{reviewId};
    </update>

    <!-- 리뷰 이미지 수정 -->
    <update id="updateReviewImage" parameterType="com.mysite.restaurant.js.model.Reviews">
        UPDATE review_images
        SET image_url = #{imageUrl}
        WHERE review_image_id = #{reviewImageId};
    </update>
    
    <!-- 답글 수정 -->
    <update id="updateReplies" parameterType="com.mysite.restaurant.js.model.Reviews">
        UPDATE review_replies
        SET replies_content = #{repliesContent}
        WHERE reply_id = #{replyId};
    </update>
    
    <!-- 가게 조회 -->
    <select id="selectShop" resultType="com.mysite.restaurant.js.model.Restaurants">
        SELECT * FROM restaurants WHERE restaurant_id = #{restaurantId};
    </select>
    <!-- 예약정보 조회 -->
    <select id="selectReservation" resultType="com.mysite.restaurant.js.model.Reservation">
        SELECT * FROM reservation WHERE reservation_id = #{reservationId};
    </select>
    <!-- 유저정보 조회 -->
    <select id="selectUser" resultType="com.mysite.restaurant.js.model.User">
        SELECT * FROM users WHERE user_id = #{userId};
    </select>


</mapper>
