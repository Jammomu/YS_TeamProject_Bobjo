<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="src.main.java.com.mysite.restaurant.hj.mapper.UserMapper">

	<!-- 회원가입 -->
	<insert id="userSignup">
		INSERT INTO users (email, PASSWORD, NAME, phone, notification_agreed)
		VALUES (#{email}, #{password}, #{name}, #{phone}, #{notification_agreed});
	</insert>
	
	<!-- 로그인 -->
	<select id="userLogin" resultType="src.main.java.com.mysite.restaurant.hj.mapper.UserMapper">
		SELECT email, PASSWORD
		FROM users
		WHERE email = #{email};
	</select>
	
	<!-- 소셜 로그인 -->
	
	<!-- 내 정보 조회 -->
	<select id="selectUserProfile" resultType="src.main.java.com.mysite.restaurant.hj.mapper.UserMapper">
		SELECT email, NAME, phone, notification_agreed
		FROM users
		WHERE email = #{email};
	</select>
	
	<!-- 내 정보 수정 -->
	<update id="updateUserProfile">
		UPDATE users
		SET NAME = #{name}, phone = #{phone}, notification_agreed = #{notification_agreed}
		WHERE email = #{email};
	</update>
	
	<!-- 회원 탈퇴 -->	
	<!-- 참조 데이터 삭제 -->
	<delete id="deleteUserReference">
		DELETE FROM review_replies
		WHERE user_id = (SELECT user_id FROM users WHERE email = #{email});
	</delete>
	<!-- 사용자 데이터 삭제 -->
	<delete id="deleteUser">
		DELETE FROM users
		WHERE email = #{email};
	</delete>
	
	<!-- 휴대폰 인증 -->
	<!-- 인증 코드 저장 -->
	<insert id="savePhoneVerification">
		INSERT INTO phone_verification (phone, verification_code, expires_at, is_verified, attempts)
		VALUES (#{phone}, '123456', DATE_ADD(NOW(), INTERVAL 5 MINUTE), FALSE, 0)
		ON DUPLICATE KEY UPDATE
		verification_code = '123456',
		expires_at = DATE_ADD(NOW(), INTERVAL 5 MINUTE),
		is_verified = FALSE,
		attempts = 0;
	</insert>
	<!-- 인증 코드 확인 -->
	<select id="selectPhoneVerification">
		SELECT *
		FROM phone_verification
		WHERE phone = #{phone}
		AND verification_code = '123456' -- 인증 코드가 저장된 값과 일치하는지 확인
		AND expires_at > NOW() -- 인증 코드가 만료되지 않았는지 확인
		AND is_verified = FALSE; -- 인증이 이미 완료된 상태인지 확인
	</select>
	<!-- 인증 성공 처리 -->
	<update id="updatePhoneVerification">
		UPDATE phone_verification
		SET is_verified = TRUE
		WHERE phone = '010-0000-0000'
		AND verification_code = '123456'
		AND expires_at > NOW()
		AND is_verified = FALSE;
	</update>
	<!-- 인증 시도 횟수 증가 -->
	<update id="updatePhoneVerification-attempts">
		UPDATE phone_verification
		SET attempts = attempts + 1
		WHERE phone = #{phone};
	</update>
	<!-- 인증 시도 횟수 초과 확인 (5회 초과) -->
	<select id="selectPhoneVerification-attempts">
		SELECT *
		FROM phone_verification
		WHERE phone = #{phone}
		AND attempts >= 5;
	</select>
	<!-- 만료된 인증 코드 삭제 -->
	<delete id="deletePhoneVerification">
		DELETE FROM phone_verification
		WHERE expires_at < NOW();
	</delete>
	<!-- 인증된 사용자 확인 -->
	<select id="selectPhoneVerification-user">
		SELECT is_verified
		FROM phone_verificateion
		WHERE phone = #{phone};
	</select>
	
	<!-- 사업자 인증 -->
	<insert id="insertPromotionOwner">
		INSERT INTO promotion_owner (business_registration_number, owner_name, restaurant_name, address, phone, business_hours)
		VALUES (#{business_registration_number}, #{owner_name}, #{restaurant_name}, #{address}, #{phone}, #{business_hours});
	</insert>
	<!-- 사업자 인증 후 사용자 정보 수정 -->
	<update id="updatePromotionOwner">
		UPDATE users
		SET user_type = 'OWNER'
		WHERE email = #{email};
	</update>
</mapper>